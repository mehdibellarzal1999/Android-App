// Generated by view binder compiler. Do not edit!
package com.traveler.traveljournal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.traveler.traveljournal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton settingsBackBtn;

  @NonNull
  public final ChipGroup settingsChipsGroup;

  @NonNull
  public final Chip settingsEnglishChip;

  @NonNull
  public final Chip settingsFrenchChip;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final View view;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton settingsBackBtn, @NonNull ChipGroup settingsChipsGroup,
      @NonNull Chip settingsEnglishChip, @NonNull Chip settingsFrenchChip,
      @NonNull TextView textView12, @NonNull TextView textView5, @NonNull View view) {
    this.rootView = rootView;
    this.settingsBackBtn = settingsBackBtn;
    this.settingsChipsGroup = settingsChipsGroup;
    this.settingsEnglishChip = settingsEnglishChip;
    this.settingsFrenchChip = settingsFrenchChip;
    this.textView12 = textView12;
    this.textView5 = textView5;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.settings_back_btn;
      ImageButton settingsBackBtn = ViewBindings.findChildViewById(rootView, id);
      if (settingsBackBtn == null) {
        break missingId;
      }

      id = R.id.settings_chips_group;
      ChipGroup settingsChipsGroup = ViewBindings.findChildViewById(rootView, id);
      if (settingsChipsGroup == null) {
        break missingId;
      }

      id = R.id.settings_english_chip;
      Chip settingsEnglishChip = ViewBindings.findChildViewById(rootView, id);
      if (settingsEnglishChip == null) {
        break missingId;
      }

      id = R.id.settings_french_chip;
      Chip settingsFrenchChip = ViewBindings.findChildViewById(rootView, id);
      if (settingsFrenchChip == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, settingsBackBtn,
          settingsChipsGroup, settingsEnglishChip, settingsFrenchChip, textView12, textView5, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
